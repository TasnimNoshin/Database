connect to cs3db3;
--Question1
--Identify all buses (busID, age, manufacturer) with advertising revenue greater than $9000.
SELECT BusID, Age, Manufacturer
FROM Bus
WHERE AdvertisingRevenue > 9000;

--Question2
--Find the number of students in the database. A student is defined as a person with a student occupation or is less than 25 years old.
-- Do not include duplicates. (Hint: If needed, you may use the date() function.)
SELECT COUNT(DISTINCT SIN) AS NumOfStudent
FROM Person
WHERE Occupation = 'student' OR (YEAR(CURRENT_TIMESTAMP)-YEAR(DateOfBirth)) < 25;

--Question3
--How many students took bus route #5 on May 3rd, 2017?
SELECT COUNT(DISTINCT Take.SIN) AS NumOfStudent
FROM Person,Take
WHERE (Take.BusID IN (SELECT BusID 
                      FROM Bus
					  WHERE RouteID = 5))
		AND (Person.Occupation = 'student' OR (YEAR(CURRENT_TIMESTAMP)-YEAR(Person.DateOfBirth)) < 25) 
		AND Date = '5/3/2017' AND Take.SIN = Person.SIN;

--Question4
--For each bus route, find the total advertising revenue. Return the bus route number and the total revenue. Order the results in descending order of total revenue.
SELECT RouteID, SUM(AdvertisingRevenue) AS TotalAdRev
FROM Bus
GROUP BY RouteID
ORDER BY SUM(AdvertisingRevenue) DESC;

--Question5a
-- Find all drivers who have less than 3 infractions. Return the driver’s ID, first name and last name.
SELECT Person.SIN, Person.FirstName, Person.LastName
FROM Person
WHERE Person.SIN IN (SELECT SIN
                     FROM Infraction
                     GROUP BY SIN
					 HAVING COUNT(SIN) < 3)
GROUP BY Person.SIN, Person.FirstName, Person.LastName;

--Question5b
--For each driver, return the total demerit points and total fines incurred. Do not include drivers with less than 
--2 demerit points in the result. Sort the result such that the most offending drivers (in terms of demerit points, total fines) are listed first.
SELECT SUM(Demerit) AS TotalDem, SUM(Fine) AS TotalFine
FROM Infraction 
GROUP BY SIN
HAVING SUM(Demerit) >= 2
ORDER BY SUM(Demerit) DESC, SUM(Fine) DESC;

--Question6
--Determine those buses that are the unique (only) bus made by their manufacturer. Return the busID and the manufacturer.
SELECT BusID, Manufacturer
FROM Bus
WHERE BusID NOT IN (SELECT b1.busID
                    FROM Bus b1, Bus b2
					WHERE b1.BusID <> b2.BusID AND b1.manufacturer = b2.manufacturer);

--Question7a
--For each passenger type, find the total fare revenues. Return the passenger type and the total (fare) revenue.
 --total revenue: earn money from the take table. quantity()*price

SELECT Passenger.Type, SUM(Fee) AS TotalFare
FROM Take, Passenger, Fare
WHERE Passenger.SIN = Take.SIN
	  AND Passenger.Type = Fare.Type
GROUP BY Passenger.Type;

--Question7b
--Extend your query in part (a) to only list passenger types with revenues greater than $500.
SELECT Passenger.Type, SUM(Fee) AS TotalFare
FROM Take, Passenger, Fare
WHERE Passenger.SIN = Take.SIN
	  AND Passenger.Type = Fare.Type
GROUP BY Passenger.Type
HAVING SUM(Fee) > 500;

--Question7c
--Extend your query in part (a) to return the most profitable passenger type (in terms of total fare revenue) on May 1, 2017.
SELECT Passenger.Type, SUM(Fee) AS TotalFare
FROM Take, Passenger, Fare
WHERE Passenger.SIN = Take.SIN
	  AND Passenger.Type = Fare.Type
	  AND Take.Date = '5/1/2017'
GROUP BY Passenger.Type
ORDER BY SUM(Fee) DESC
FETCH FIRST 1 ROWS ONLY;

--Question8a
--Determine the most popular bus route on May 7, 2017 (according to the number of passengers). Return the route ID and the number of passenger trips.
 SELECT Bus.RouteID, COUNT(Take.SIN) AS NumOfPassenger
 FROM Bus, Take
 WHERE Take.Date = '5/7/2017' AND Bus.BusID = Take.BusID
 GROUP BY Bus.RouteID
 ORDER BY COUNT(Take.SIN) DESC
 FETCH FIRST 1 ROWS ONLY;
 
 --Question8b
--Which day contained the largest volume of passenger trips? Return the date and the number of trips taken.
SELECT Take.Date, COUNT(Take.BusID) AS NumOfTrips
FROM Take, Bus
WHERE Take.BusID = Bus.BusID
GROUP BY Take.Date
ORDER BY COUNT(Take.BusID) DESC
FETCH FIRST 1 ROWS ONLY;

--Question9
--Find all persons who visited a library on either May 5, 2017 or May 6, 2017. Return the person’s occupation. Do not include duplicates.
SELECT DISTINCT Person.Occupation
FROM Person, Take, Bus, Go, Sites
WHERE Take.Date BETWEEN '5/5/2017' AND '5/6/2017' --on dates 
	  AND Take.BusID = Bus.BusID AND Bus.RouteID = Go.RouteID
	  AND Take.SIN = Person.SIN AND Go.SIName = Sites.SIName
	  AND Sites.Category = 'Library';
	  
--Question10
--Find the drivers who have worked with HSR for more than 5 years, with a salary greater than $80000, and with less than 10 demerit points on their driving record.
--Return the driver’s first name, last name, and ID.
SELECT Person.SIN, Person.FirstName, Person.LastName
FROM Driver, Person, (SELECT SIN, SUM(Demerit) AS SumDem 
                      FROM Infraction
                      GROUP BY Infraction.SIN) TotalDem
WHERE Person.SIN = Driver.SIN 
      AND Driver.YearsOfService > 5
	  AND Driver.Salary > 80000
	  AND TotalDem.SumDem < 10
	  AND Person.SIN = TotalDem.SIN;

--Question11
--Find all students who attended the ”Marauders Tennis” match and arrived via a bus on route 4. Return the student’s first name, last name, and their gender.
SELECT Person.FirstName, Person.LastName, Person.Sex
FROM Person, Event, Take, Passenger, Bus, Go
WHERE Passenger.Type = 'ST' AND Person.SIN = Passenger.SIN
      AND Bus.RouteID = 4 AND EName = 'Marauders Tennis'
	  AND Take.BusID = Bus.BusID AND Take.SIN = Passenger.SIN
	  AND Take.Time <= Event.Time AND Go.SIName = Event.SIName
	  AND Take.Date = Event.Date;

--Question12
--Assuming that the bus schedule has not changed since May 2017. Suppose you would like to attend the ”Marauders Basketball” game (an event). The game starts at 5pm, and you’d
--like to arrive at the site between 4:20pm and 4:50pm, which routes can you take? Use May 1, 2017 as a reference date for the bus schedule information. List the route ID, the bus stop name
--(where you should get off the bus), and the scheduled arrival time.
SELECT Schedule.RouteID, Stop.SName, Schedule.ArrivalTime
FROM Event, Stop, Schedule
WHERE event.EName = 'Marauders Basketball' AND HOUR(Schedule.ArrivalTime) = 16
      AND MINUTE(Schedule.ArrivalTime) >= 20 AND MINUTE(Schedule.ArrivalTime) <= 50
	  AND Stop.SIName = Event.SIName AND  Schedule.StopID = Stop.StopID
	  AND Schedule.Date = '5/1/2017';

